// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.1/containers/rust-postgres
{
	"name": "Rust and PostgreSQL",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspace",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"lldb.executable": "/usr/bin/lldb",
		// VS Code don't watch files under ./targets
		"files.watcherExclude": {
			"**/target/**": true
		},
		"rust-analyzer.checkOnSave.command": "clippy",
		"sqltools.autoConnectTo": "postgres",
		"sqltools.connections": [
			{
				"previewLimit": 50,
				"server": "localhost",
				"port": 5432,
				"driver": "PostgreSQL",
				"name": "postgres",
				"database": "postgres",
				"username": "postgres",
				"password": "postgres"
			}
		]
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"vadimcn.vscode-lldb",
		"mutantdino.resourcemonitor",
		"matklad.rust-analyzer",
		"tamasfe.even-better-toml",
		"serayuzgur.crates",
        "adpyke.vscode-sql-formatter",
		"mtxr.sqltools",
		"mtxr.sqltools-driver-pg"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": ["${containerEnv:ROCKET_PORT}"],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "rustup default nightly && cargo install diesel_cli --no-default-features --features postgres && diesel migration run",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
