name: Run migrations on RDS database

on:
  push:
    branches: [ "main" ]
    
env:
  AWS_REGION: ${{ vars.AWS_REGION }}                   # set this to your preferred AWS region, e.g. us-west-1
  REGISTRY: ghcr.io
  IMAGE: p2pcv-migrate
  FULL_IMAGE: ghcr.io/relacibo/p2pcv-migrate
  ECS_CLUSTER:  ${{ vars.AWS_ECS_CLUSTER }}                  # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: deployment/dev/migrate/task-definition.json # set this to the path to your Amazon ECS task definition
                                              # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: p2pcv-migrate-dev           # set this to the name of the container in the
                                              # containerDefinitions section of your task definition

permissions:
  contents: read

concurrency:
  group: migrate-dev
  cancel-in-progress: true

jobs:
  migrate:
    name: Migrate
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      packages: write
    steps:
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.FULL_IMAGE }}
        tags: |
          latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./migrate.Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          ${{ steps.meta.outputs.tags }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ vars.AWS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.meta.outputs.tags }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}

    - name: Run ECS Task
      uses: researchsquare/run-ecs-task-action@v1
      with:
        task-definition: task-definition-arn
        cluster: my-cluster
        wait-for-service-stability: true
        
    - name: Run Task on Amazon ECS
      uses: muya/amazon-ecs-run-task@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        cluster: ${{ env.ECS_CLUSTER }}
        count: 1
        started-by: github-actions-${{ github.actor }}
        wait-for-finish: true
